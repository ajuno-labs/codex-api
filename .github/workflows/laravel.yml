name: Laravel CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.2, 8.3]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: laravel_test
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, pgsql, pdo_pgsql
        coverage: xdebug

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Copy environment file
      run: cp .env.example .env.testing

    - name: Generate application key
      run: php artisan key:generate --env=testing

    - name: Set up test environment
      run: |
        echo "DB_CONNECTION=pgsql" >> .env.testing
        echo "DB_HOST=127.0.0.1" >> .env.testing
        echo "DB_PORT=5432" >> .env.testing
        echo "DB_DATABASE=laravel_test" >> .env.testing
        echo "DB_USERNAME=postgres" >> .env.testing
        echo "DB_PASSWORD=postgres" >> .env.testing
        echo "CACHE_DRIVER=array" >> .env.testing
        echo "QUEUE_CONNECTION=sync" >> .env.testing
        echo "SESSION_DRIVER=array" >> .env.testing

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h 127.0.0.1 -p 5432 -U postgres; do
          sleep 1
        done

    - name: Run database migrations
      run: php artisan migrate --env=testing --force

    - name: Run PHPUnit tests
      run: php artisan test --env=testing --coverage-clover=coverage.xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Run Laravel Pint (Code Style)
      run: ./vendor/bin/pint --test

    - name: Run PHPStan (Static Analysis)
      run: |
        composer require --dev phpstan/phpstan larastan/larastan --no-interaction
        ./vendor/bin/phpstan analyse --memory-limit=2G

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Run security audit
      run: composer audit 